{"version":3,"file":"javascript-barcode-reader.js.map","sources":["../src/utiltities.js","../src/code-128/index.js","../src/2of5/index.js","../src/code-39/index.js","../src/code-93/index.js","../src/ean-13/index.js","../src/ean-8/index.js","../src/codabar/index.js","../src/index.js"],"sourcesContent":["const Jimp = require('jimp')\r\n\r\nconst isNode =\r\n  typeof process === 'object' &&\r\n  process.release &&\r\n  process.release.name === 'node'\r\n\r\n// check if string is url\r\nfunction isUrl(s) {\r\n  const regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/\r\n  return !s[0] === '#' || regexp.test(s)\r\n}\r\n\r\n/**\r\n * Creates image data from HTML image\r\n * @param {HTMLImageElement} image HTML Image element\r\n */\r\nfunction createImageData(image) {\r\n  const canvas = document.createElement('canvas')\r\n  const ctx = canvas.getContext('2d')\r\n  const width = image.naturalWidth\r\n  const height = image.naturalHeight\r\n\r\n  canvas.width = width\r\n  canvas.height = height\r\n\r\n  ctx.drawImage(image, 0, 0)\r\n\r\n  return ctx.getImageData(0, 0, image.naturalWidth, image.naturalHeight)\r\n}\r\n\r\n/**\r\n * Reads image source and returns imageData as only callback parameter\r\n * @param {*} source Image source\r\n * @param {Function} callback Callback to pass the imageData\r\n */\r\nasync function getImageDataFromSource(source) {\r\n  const isStringSource = typeof source === 'string'\r\n  const isURLSource = isStringSource ? isUrl(source) : false\r\n  const { tagName } = source\r\n\r\n  return new Promise((resolve, reject) => {\r\n    // String source\r\n    if (isStringSource) {\r\n      // Read file in Node.js\r\n      if (isNode) {\r\n        Jimp.read(\r\n          isURLSource ? { url: source, headers: {} } : source,\r\n          (err, image) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              const { data, width, height } = image.bitmap\r\n              resolve({\r\n                data: data.toJSON().data,\r\n                width,\r\n                height,\r\n              })\r\n            }\r\n          }\r\n        )\r\n      } else if (isURLSource) {\r\n        // Load Image from source\r\n        const img = new Image()\r\n        img.onerror = reject\r\n        img.onload = () => resolve(createImageData(img))\r\n        img.src = source\r\n      } else {\r\n        // Find Elment by ID\r\n        const imgElem = document.getElementById(source)\r\n        if (imgElem) {\r\n          resolve(createImageData(imgElem))\r\n        }\r\n\r\n        reject(new Error('Invalid image source specified!'))\r\n      }\r\n    } else if (tagName) {\r\n      // HTML Image element\r\n      if (tagName === 'IMG') {\r\n        resolve(createImageData(source))\r\n      }\r\n      // HTML Canvas element\r\n      else if (tagName === 'CANVAS') {\r\n        resolve(\r\n          source\r\n            .getContext('2d')\r\n            .getImageData(0, 0, source.naturalWidth, source.naturalHeight)\r\n        )\r\n      }\r\n\r\n      reject(new Error('Invalid image source specified!'))\r\n    }\r\n    // Pixel Data\r\n    else if (source.data && source.width && source.height) {\r\n      resolve(source)\r\n    } else {\r\n      reject(new Error('Invalid image source specified!'))\r\n    }\r\n  })\r\n}\r\n\r\nfunction getLines(obj) {\r\n  const { data, start, end, channels, width } = obj\r\n  const pxLine = data.slice(start, end)\r\n  const sum = []\r\n  const bmp = []\r\n  const lines = []\r\n  let count = 1\r\n  let min = 0\r\n  let max = 0\r\n\r\n  const padding = { left: true, right: true }\r\n\r\n  // grey scale section and sum of columns pixels in section\r\n  for (let row = 0; row < 2; row += 1) {\r\n    for (let col = 0; col < width; col += 1) {\r\n      const i = (row * width + col) * channels\r\n      const g = (pxLine[i] * 3 + pxLine[i + 1] * 4 + pxLine[i + 2] * 2) / 9\r\n      const s = sum[col]\r\n\r\n      pxLine[i] = g\r\n      pxLine[i + 1] = g\r\n      pxLine[i + 2] = g\r\n\r\n      sum[col] = g + (s || 0)\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < width; i += 1) {\r\n    sum[i] /= 2\r\n    const s = sum[i]\r\n\r\n    if (s < min) {\r\n      min = s\r\n    } else {\r\n      max = s\r\n    }\r\n  }\r\n\r\n  // matches columns in two rows\r\n  const pivot = min + (max - min) / 2\r\n\r\n  for (let col = 0; col < width; col += 1) {\r\n    let matches = 0\r\n    let value\r\n\r\n    for (let row = 0; row < 2; row += 1) {\r\n      value = pxLine[(row * width + col) * channels]\r\n\r\n      if (value > pivot) {\r\n        matches += 1\r\n      }\r\n    }\r\n\r\n    if (col === 0 && value <= pivot) padding.left = false\r\n    if (col === width - 1 && value <= pivot) {\r\n      padding.right = false\r\n    }\r\n\r\n    bmp.push(matches > 1)\r\n  }\r\n\r\n  // matches width of barcode lines\r\n  let curr = bmp[0]\r\n\r\n  for (let col = 0; col < width; col += 1) {\r\n    if (bmp[col] === curr) {\r\n      count += 1\r\n\r\n      if (col === width - 1) {\r\n        lines.push(count)\r\n      }\r\n    } else {\r\n      lines.push(count)\r\n      count = 1\r\n      curr = bmp[col]\r\n    }\r\n  }\r\n\r\n  return { lines, padding }\r\n}\r\n\r\nmodule.exports = {\r\n  getImageDataFromSource,\r\n  getLines,\r\n}\r\n","const WIDTH_TBL = [\r\n  '212222',\r\n  '222122',\r\n  '222221',\r\n  '121223',\r\n  '121322',\r\n  '131222',\r\n  '122213',\r\n  '122312',\r\n  '132212',\r\n  '221213',\r\n  '221312',\r\n  '231212',\r\n  '112232',\r\n  '122132',\r\n  '122231',\r\n  '113222',\r\n  '123122',\r\n  '123221',\r\n  '223211',\r\n  '221132',\r\n  '221231',\r\n  '213212',\r\n  '223112',\r\n  '312131',\r\n  '311222',\r\n  '321122',\r\n  '321221',\r\n  '312212',\r\n  '322112',\r\n  '322211',\r\n  '212123',\r\n  '212321',\r\n  '232121',\r\n  '111323',\r\n  '131123',\r\n  '131321',\r\n  '112313',\r\n  '132113',\r\n  '132311',\r\n  '211313',\r\n  '231113',\r\n  '231311',\r\n  '112133',\r\n  '112331',\r\n  '132131',\r\n  '113123',\r\n  '113321',\r\n  '133121',\r\n  '313121',\r\n  '211331',\r\n  '231131',\r\n  '213113',\r\n  '213311',\r\n  '213131',\r\n  '311123',\r\n  '311321',\r\n  '331121',\r\n  '312113',\r\n  '312311',\r\n  '332111',\r\n  '314111',\r\n  '221411',\r\n  '431111',\r\n  '111224',\r\n  '111422',\r\n  '121124',\r\n  '121421',\r\n  '141122',\r\n  '141221',\r\n  '112214',\r\n  '112412',\r\n  '122114',\r\n  '122411',\r\n  '142112',\r\n  '142211',\r\n  '241211',\r\n  '221114',\r\n  '413111',\r\n  '241112',\r\n  '134111',\r\n  '111242',\r\n  '121142',\r\n  '121241',\r\n  '114212',\r\n  '124112',\r\n  '124211',\r\n  '411212',\r\n  '421112',\r\n  '421211',\r\n  '212141',\r\n  '214121',\r\n  '412121',\r\n  '111143',\r\n  '111341',\r\n  '131141',\r\n  '114113',\r\n  '114311',\r\n  '411113',\r\n  '411311',\r\n  '113141',\r\n  '114131',\r\n  '311141',\r\n  '411131',\r\n  '211412',\r\n  '211214',\r\n  '211232',\r\n  '233111',\r\n  '211133',\r\n  '2331112',\r\n]\r\n\r\nconst TBL_A = [\r\n  ' ',\r\n  '!',\r\n  '\"',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  \"'\",\r\n  '(',\r\n  ')',\r\n  '*',\r\n  '+',\r\n  ',',\r\n  '-',\r\n  '.',\r\n  '/',\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  ':',\r\n  ';',\r\n  '<',\r\n  '=',\r\n  '>',\r\n  '?',\r\n  '@',\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n  '[',\r\n  '\\\\',\r\n  ']',\r\n  '^',\r\n  '_',\r\n  'NUL',\r\n  'SOH',\r\n  'STX',\r\n  'ETX',\r\n  'EOT',\r\n  'ENQ',\r\n  'ACK',\r\n  'BEL',\r\n  'BS',\r\n  'HT',\r\n  'LF',\r\n  'VT',\r\n  'FF',\r\n  'CR',\r\n  'SO',\r\n  'SI',\r\n  'DLE',\r\n  'DC1',\r\n  'DC2',\r\n  'DC3',\r\n  'DC4',\r\n  'NAK',\r\n  'SYN',\r\n  'ETB',\r\n  'CAN',\r\n  'EM',\r\n  'SUB',\r\n  'ESC',\r\n  'FS',\r\n  'GS',\r\n  'RS',\r\n  'US',\r\n  'FNC 3',\r\n  'FNC 2',\r\n  'Shift B',\r\n  'Code C',\r\n  'Code B',\r\n  'FNC 4',\r\n  'FNC 1',\r\n]\r\n\r\nconst TBL_B = [\r\n  ' ',\r\n  '!',\r\n  '\"',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  \"'\",\r\n  '(',\r\n  ')',\r\n  '*',\r\n  '+',\r\n  ',',\r\n  '-',\r\n  '.',\r\n  '/',\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  ':',\r\n  ';',\r\n  '<',\r\n  '=',\r\n  '>',\r\n  '?',\r\n  '@',\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n  '[',\r\n  '\\\\',\r\n  ']',\r\n  '^',\r\n  '_',\r\n  '`',\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n  '{',\r\n  '|',\r\n  '}',\r\n  '~',\r\n  'DEL',\r\n  'FNC 3',\r\n  'FNC 2',\r\n  'Shift A',\r\n  'Code C',\r\n  'FNC 4',\r\n  'Code A',\r\n  'FNC 1',\r\n]\r\n\r\nconst TBL_C = [\r\n  '00',\r\n  '01',\r\n  '02',\r\n  '03',\r\n  '04',\r\n  '05',\r\n  '06',\r\n  '07',\r\n  '08',\r\n  '09',\r\n  '10',\r\n  '11',\r\n  '12',\r\n  '13',\r\n  '14',\r\n  '15',\r\n  '16',\r\n  '17',\r\n  '18',\r\n  '19',\r\n  '20',\r\n  '21',\r\n  '22',\r\n  '23',\r\n  '24',\r\n  '25',\r\n  '26',\r\n  '27',\r\n  '28',\r\n  '29',\r\n  '30',\r\n  '31',\r\n  '32',\r\n  '33',\r\n  '34',\r\n  '35',\r\n  '36',\r\n  '37',\r\n  '38',\r\n  '39',\r\n  '40',\r\n  '41',\r\n  '42',\r\n  '43',\r\n  '44',\r\n  '45',\r\n  '46',\r\n  '47',\r\n  '48',\r\n  '49',\r\n  '50',\r\n  '51',\r\n  '52',\r\n  '53',\r\n  '54',\r\n  '55',\r\n  '56',\r\n  '57',\r\n  '58',\r\n  '59',\r\n  '60',\r\n  '61',\r\n  '62',\r\n  '63',\r\n  '64',\r\n  '65',\r\n  '66',\r\n  '67',\r\n  '68',\r\n  '69',\r\n  '70',\r\n  '71',\r\n  '72',\r\n  '73',\r\n  '74',\r\n  '75',\r\n  '76',\r\n  '77',\r\n  '78',\r\n  '79',\r\n  '80',\r\n  '81',\r\n  '82',\r\n  '83',\r\n  '84',\r\n  '85',\r\n  '86',\r\n  '87',\r\n  '88',\r\n  '89',\r\n  '90',\r\n  '91',\r\n  '92',\r\n  '93',\r\n  '94',\r\n  '95',\r\n  '96',\r\n  '97',\r\n  '98',\r\n  '99',\r\n  'Code B',\r\n  'Code A',\r\n  'FNC 1',\r\n]\r\n\r\nconst computeGroup = lines => {\r\n  // sum of a group in code-128 must be 11\r\n  const factor = lines.reduce((pre, item) => pre + item, 0) / 11;\r\n  //\r\n  return lines.map(item => Math.round(item/factor)).join('');\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let lookupTBL; let sumOP; let letterKey; let letterCode; let keyIndex\r\n  const code = []\r\n\r\n  // extract terminal bar\r\n  lines.pop()\r\n\r\n  const seq = lines.slice(0);\r\n\r\n  letterKey = computeGroup(seq.splice(0, 6))\r\n\r\n  switch (letterKey) {\r\n    case '211214':\r\n      lookupTBL = TBL_B\r\n      sumOP = 104\r\n      break\r\n    case '211232':\r\n      lookupTBL = TBL_C\r\n      sumOP = 105\r\n      break\r\n    default:\r\n      lookupTBL = TBL_A\r\n      sumOP = 103\r\n      break\r\n  }\r\n\r\n  for (let i = 1; seq.length > 12; i += 1) {\r\n    letterKey = computeGroup(seq.splice(0, 6))\r\n    keyIndex = WIDTH_TBL.indexOf(letterKey)\r\n    sumOP += i * keyIndex\r\n    letterCode = lookupTBL[keyIndex]\r\n\r\n    switch (letterCode) {\r\n      case 'Code A':\r\n        lookupTBL = TBL_A\r\n        break\r\n      case 'Code B':\r\n        lookupTBL = TBL_B\r\n        break\r\n      case 'Code C':\r\n        lookupTBL = TBL_C\r\n        break\r\n      default:\r\n        code.push(letterCode)\r\n        break\r\n    }\r\n  }\r\n\r\n  letterKey = computeGroup(seq.splice(0, 6))\r\n\r\n  if (sumOP % 103 !== WIDTH_TBL.indexOf(letterKey)) return null\r\n\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = [\r\n  'nnwwn',\r\n  'wnnnw',\r\n  'nwnnw',\r\n  'wwnnn',\r\n  'nnwnw',\r\n  'wnwnn',\r\n  'nwwnn',\r\n  'nnnww',\r\n  'wnnwn',\r\n  'nwnwn',\r\n]\r\n\r\nmodule.exports = (lines, type = 'standard') => {\r\n  const code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  if (type === 'interleaved') {\r\n    // extract start/ends pair\r\n    const startChar = lines\r\n      .splice(0, 4)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    const endChar = lines\r\n      .splice(lines.length - 3, 3)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    if (startChar !== 'nnnn' || endChar !== 'wnn') return null\r\n\r\n    // Read one encoded character at a time.\r\n    while (lines.length > 0) {\r\n      const seg = lines.splice(0, 10)\r\n\r\n      const a = seg\r\n        .filter((item, index) => index % 2 === 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(a))\r\n\r\n      const b = seg\r\n        .filter((item, index) => index % 2 !== 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(b))\r\n    }\r\n  } else if (type === 'standard') {\r\n    // extract start/ends pair\r\n    const startChar = lines\r\n      .splice(0, 6)\r\n      .filter((item, index) => index % 2 === 0)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    const endChar = lines\r\n      .splice(lines.length - 5, 5)\r\n      .filter((item, index) => index % 2 === 0)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    if (startChar !== 'wwn' || endChar !== 'wnw') return null\r\n\r\n    // Read one encoded character at a time.\r\n    while (lines.length > 0) {\r\n      const a = lines\r\n        .splice(0, 10)\r\n        .filter((item, index) => index % 2 === 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(a))\r\n    }\r\n  }\r\n\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = {\r\n  nnnwwnwnn: '0',\r\n  wnnwnnnnw: '1',\r\n  nnwwnnnnw: '2',\r\n  wnwwnnnnn: '3',\r\n  nnnwwnnnw: '4',\r\n  wnnwwnnnn: '5',\r\n  nnwwwnnnn: '6',\r\n  nnnwnnwnw: '7',\r\n  wnnwnnwnn: '8',\r\n  nnwwnnwnn: '9',\r\n  wnnnnwnnw: 'A',\r\n  nnwnnwnnw: 'B',\r\n  wnwnnwnnn: 'C',\r\n  nnnnwwnnw: 'D',\r\n  wnnnwwnnn: 'E',\r\n  nnwnwwnnn: 'F',\r\n  nnnnnwwnw: 'G',\r\n  wnnnnwwnn: 'H',\r\n  nnwnnwwnn: 'I',\r\n  nnnnwwwnn: 'J',\r\n  wnnnnnnww: 'K',\r\n  nnwnnnnww: 'L',\r\n  wnwnnnnwn: 'M',\r\n  nnnnwnnww: 'N',\r\n  wnnnwnnwn: 'O',\r\n  nnwnwnnwn: 'P',\r\n  nnnnnnwww: 'Q',\r\n  wnnnnnwwn: 'R',\r\n  nnwnnnwwn: 'S',\r\n  nnnnwnwwn: 'T',\r\n  wwnnnnnnw: 'U',\r\n  nwwnnnnnw: 'V',\r\n  wwwnnnnnn: 'W',\r\n  nwnnwnnnw: 'X',\r\n  wwnnwnnnn: 'Y',\r\n  nwwnwnnnn: 'Z',\r\n  nwnnnnwnw: '-',\r\n  wwnnnnwnn: '.',\r\n  nwwnnnwnn: ' ',\r\n  nwnwnwnnn: '$',\r\n  nwnwnnnwn: '/',\r\n  nwnnnwnwn: '+',\r\n  nnnwnwnwn: '%',\r\n  nwnnwnwnn: '*',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  const code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => pre + item, 0) / lines.length\r\n  )\r\n\r\n  // Read one encoded character at a time.\r\n  while (lines.length > 0) {\r\n    const sequenceBar = lines\r\n      .splice(0, 10)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n\r\n    code.push(CHAR_SET[sequenceBar.slice(0, 9).join('')])\r\n  }\r\n\r\n  if (code.pop() !== '*' || code.shift() !== '*') return null\r\n\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = [\r\n  { '100010100': '0' },\r\n  { '101001000': '1' },\r\n  { '101000100': '2' },\r\n  { '101000010': '3' },\r\n  { '100101000': '4' },\r\n  { '100100100': '5' },\r\n  { '100100010': '6' },\r\n  { '101010000': '7' },\r\n  { '100010010': '8' },\r\n  { '100001010': '9' },\r\n  { '110101000': 'A' },\r\n  { '110100100': 'B' },\r\n  { '110100010': 'C' },\r\n  { '110010100': 'D' },\r\n  { '110010010': 'E' },\r\n  { '110001010': 'F' },\r\n  { '101101000': 'G' },\r\n  { '101100100': 'H' },\r\n  { '101100010': 'I' },\r\n  { '100110100': 'J' },\r\n  { '100011010': 'K' },\r\n  { '101011000': 'L' },\r\n  { '101001100': 'M' },\r\n  { '101000110': 'N' },\r\n  { '100101100': 'O' },\r\n  { '100010110': 'P' },\r\n  { '110110100': 'Q' },\r\n  { '110110010': 'R' },\r\n  { '110101100': 'S' },\r\n  { '110100110': 'T' },\r\n  { '110010110': 'U' },\r\n  { '110011010': 'V' },\r\n  { '101101100': 'W' },\r\n  { '101100110': 'X' },\r\n  { '100110110': 'Y' },\r\n  { '100111010': 'Z' },\r\n  { '100101110': '-' },\r\n  { '111010100': '.' },\r\n  { '111010010': ' ' },\r\n  { '111001010': '$' },\r\n  { '101101110': '/' },\r\n  { '101110110': '+' },\r\n  { '110101110': '%' },\r\n  { '100100110': '($)' },\r\n  { '111011010': '(%)' },\r\n  { '111010110': '(/)' },\r\n  { '100110010': '(+)' },\r\n  { '101011110': '*' },\r\n]\r\n\r\nmodule.exports = lines => {\r\n  const code = []\r\n  const binary = []\r\n\r\n  // remove termination bar\r\n  lines.pop()\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => pre + item, 0) / lines.length\r\n  )\r\n\r\n  const minBarWidth = Math.ceil(\r\n    lines.reduce((pre, item) => {\r\n      if (item < barThreshold) return (pre + item) / 2\r\n      return pre\r\n    }, 0)\r\n  )\r\n\r\n  // leave the padded *\r\n  for (let i = 0; i < lines.length; i += 1) {\r\n    let segment = lines[i]\r\n\r\n    while (segment > 0) {\r\n      if (i % 2 === 0) {\r\n        binary.push(1)\r\n      } else {\r\n        binary.push(0)\r\n      }\r\n      segment -= minBarWidth\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < binary.length; i += 9) {\r\n    const searcKey = binary.slice(i, i + 9).join('')\r\n\r\n    const char = CHAR_SET.filter(item => Object.keys(item)[0] === searcKey)\r\n\r\n    code.push(char[0][searcKey])\r\n  }\r\n\r\n  if (code.shift() !== '*' || code.pop() !== '*') return null\r\n\r\n  const K = code.pop()\r\n  let sum = 0\r\n  let letter; let Value\r\n  const findValue = item => Object.values(item)[0] === letter\r\n\r\n  for (let i = code.length - 1; i >= 0; i -= 1) {\r\n    letter = code[i]\r\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\r\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\r\n  }\r\n\r\n  if (Object.values(CHAR_SET[sum % 47])[0] !== K) return null\r\n\r\n  const C = code.pop()\r\n  sum = 0\r\n\r\n  for (let i = code.length - 1; i >= 0; i -= 1) {\r\n    letter = code[i]\r\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\r\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\r\n  }\r\n\r\n  if (Object.values(CHAR_SET[sum % 47])[0] !== C) return null\r\n\r\n  return code.join('')\r\n}\r\n","const UPC_SET = {\r\n  '3211': '0',\r\n  '2221': '1',\r\n  '2122': '2',\r\n  '1411': '3',\r\n  '1132': '4',\r\n  '1231': '5',\r\n  '1114': '6',\r\n  '1312': '7',\r\n  '1213': '8',\r\n  '3112': '9',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = ''\r\n  // manually add start dummy line\r\n  lines.unshift(0)\r\n  // start indicator/reference lines\r\n  const bar = ~~((lines[1] + lines[2] + lines[3]) / 3) //eslint-disable-line\r\n\r\n  for (let i = 1; i < lines.length; i += 1) {\r\n    let group\r\n\r\n    if (code.length < 6) {\r\n      group = lines.slice(i * 4, i * 4 + 4)\r\n    } else {\r\n      group = lines.slice(i * 4 + 5, i * 4 + 9)\r\n    }\r\n\r\n    const digits = [\r\n      Math.round(group[0] / bar),\r\n      Math.round(group[1] / bar),\r\n      Math.round(group[2] / bar),\r\n      Math.round(group[3] / bar),\r\n    ]\r\n\r\n    const result =\r\n      UPC_SET[digits.join('')] || UPC_SET[digits.reverse().join('')]\r\n\r\n    if (result) {\r\n      code += result\r\n    }\r\n\r\n    if (code.length === 12) break\r\n  }\r\n\r\n  return code\r\n}\r\n","const UPC_SET = {\r\n  '3211': '0',\r\n  '2221': '1',\r\n  '2122': '2',\r\n  '1411': '3',\r\n  '1132': '4',\r\n  '1231': '5',\r\n  '1114': '6',\r\n  '1312': '7',\r\n  '1213': '8',\r\n  '3112': '9',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = ''\r\n  // manually add start dummy line\r\n  lines.unshift(0)\r\n  // start indicator/reference lines\r\n  const bar = ~~((lines[1] + lines[2] + lines[3]) / 3) //eslint-disable-line\r\n\r\n  for (let i = 1; i < lines.length; i += 1) {\r\n    let group\r\n\r\n    if (code.length < 4) {\r\n      group = lines.slice(i * 4, i * 4 + 4)\r\n    } else {\r\n      group = lines.slice(i * 4 + 5, i * 4 + 9)\r\n    }\r\n\r\n    const digits = [\r\n      Math.round(group[0] / bar),\r\n      Math.round(group[1] / bar),\r\n      Math.round(group[2] / bar),\r\n      Math.round(group[3] / bar),\r\n    ]\r\n\r\n    const result =\r\n      UPC_SET[digits.join('')] || UPC_SET[digits.reverse().join('')]\r\n\r\n    if (result) {\r\n      code += result\r\n    }\r\n\r\n    if (code.length === 8) break\r\n  }\r\n\r\n  return code\r\n}\r\n","const CHAR_SET = {\r\n  nnnnnww: '0',\r\n  nnnnwwn: '1',\r\n  nnnwnnw: '2',\r\n  wwnnnnn: '3',\r\n  nnwnnwn: '4',\r\n  wnnnnwn: '5',\r\n  nwnnnnw: '6',\r\n  nwnnwnn: '7',\r\n  nwwnnnn: '8',\r\n  wnnwnnn: '9',\r\n  nnnwwnn: '-',\r\n  nnwwnnn: '$',\r\n  wnnnwnw: ':',\r\n  wnwnnnw: '/',\r\n  wnwnwnn: '.',\r\n  nnwwwww: '+',\r\n  nnwwnwn: 'A',\r\n  nnnwnww: 'B',\r\n  nwnwnnw: 'C',\r\n  nnnwwwn: 'D',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  const code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  // Read one encoded character at a time.\r\n  while (lines.length > 0) {\r\n    const seg = lines.splice(0, 8).splice(0, 7)\r\n\r\n    const a = seg.map(line => (line < barThreshold ? 'n' : 'w')).join('')\r\n\r\n    code.push(CHAR_SET[a])\r\n  }\r\n\r\n  return code.join('')\r\n}\r\n","const UTILITIES = require('./utiltities')\r\n\r\n/* eslint-disable */\r\nconst BARCODE_DECODERS = {\r\n  'code-128': require('./code-128'),\r\n  'code-2of5': require('./2of5'),\r\n  'code-39': require('./code-39'),\r\n  'code-93': require('./code-93'),\r\n  'ean-13': require('./ean-13'),\r\n  'ean-8': require('./ean-8'),\r\n  codabar: require('./codabar'),\r\n}\r\n/* eslint-enable */\r\n\r\n/**\r\n * Scans and returns barcode from the provided image\r\n *\r\n * @param {*} image Image element || Canvas || ImageData || Image Path in Node.js\r\n * @param {Object} options Options defining type of barcode to detect\r\n * @param {String} options.barcode Barcode name\r\n * @param {String=} options.type Type of Barcode\r\n * @returns {String} Extracted barcode string\r\n */\r\nasync function barcodeDecoder(image, options) {\r\n  // eslint-disable-next-line\r\n  options.barcode = options.barcode.toLowerCase()\r\n  const list = Object.keys(BARCODE_DECODERS)\r\n\r\n  if (list.indexOf(options.barcode) === -1) {\r\n    throw new Error(\r\n      `Invalid barcode specified. Available decoders: ${list}. https://github.com/mubaidr/Javascript-Barcode-Reader#available-decoders`\r\n    )\r\n  }\r\n\r\n  const { data, width, height } = await UTILITIES.getImageDataFromSource(image)\r\n  const channels = data.length / (width * height)\r\n\r\n  // check points for barcode location\r\n  const spoints = [1, 9, 2, 8, 3, 7, 4, 6, 5]\r\n  let numLines = spoints.length\r\n  const slineStep = height / (numLines + 1)\r\n\r\n  // eslint-disable-next-line\r\n  while ((numLines -= 1)) {\r\n    // create section of height 2\r\n    const start = channels * width * Math.floor(slineStep * spoints[numLines])\r\n    const end =\r\n      channels * width * Math.floor(slineStep * spoints[numLines]) +\r\n      2 * channels * width\r\n    // const pxLine = data.slice(start, end)\r\n\r\n    // const { lines, padding } = UTILITIES.getLines({\r\n    const { lines, padding } = UTILITIES.getLines({\r\n      data,\r\n      start,\r\n      end,\r\n      width,\r\n      height,\r\n      channels,\r\n    })\r\n\r\n    if (lines && lines.length !== 0) {\r\n      // remove empty whitespaces on side of barcode\r\n      if (padding.left) lines.shift()\r\n      if (padding.right) lines.pop()\r\n\r\n      // Run the decoder\r\n      const result = BARCODE_DECODERS[options.barcode](lines, options.type)\r\n\r\n      if (result) {\r\n        return result\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('Failed to extract barcode!')\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = barcodeDecoder\r\n} else {\r\n  global.javascriptBarcodeReader = barcodeDecoder\r\n}\r\n"],"names":["isNode","process","release","name","isUrl","s","regexp","test","createImageData","image","canvas","document","createElement","ctx","getContext","width","naturalWidth","height","naturalHeight","drawImage","getImageData","getImageDataFromSource","source","isStringSource","isURLSource","tagName","Promise","resolve","reject","Jimp","read","url","headers","err","bitmap","data","toJSON","img","Image","onerror","onload","src","imgElem","getElementById","Error","getLines","obj","start","end","channels","pxLine","slice","sum","bmp","lines","count","min","max","padding","left","right","row","col","i","g","pivot","matches","value","push","curr","WIDTH_TBL","TBL_A","TBL_B","TBL_C","computeGroup","factor","reduce","pre","item","map","Math","round","join","lookupTBL","sumOP","letterKey","letterCode","keyIndex","code","pop","seq","splice","length","indexOf","CHAR_SET","type","barThreshold","ceil","startChar","line","endChar","seg","a","filter","index","b","nnnwwnwnn","wnnwnnnnw","nnwwnnnnw","wnwwnnnnn","nnnwwnnnw","wnnwwnnnn","nnwwwnnnn","nnnwnnwnw","wnnwnnwnn","nnwwnnwnn","wnnnnwnnw","nnwnnwnnw","wnwnnwnnn","nnnnwwnnw","wnnnwwnnn","nnwnwwnnn","nnnnnwwnw","wnnnnwwnn","nnwnnwwnn","nnnnwwwnn","wnnnnnnww","nnwnnnnww","wnwnnnnwn","nnnnwnnww","wnnnwnnwn","nnwnwnnwn","nnnnnnwww","wnnnnnwwn","nnwnnnwwn","nnnnwnwwn","wwnnnnnnw","nwwnnnnnw","wwwnnnnnn","nwnnwnnnw","wwnnwnnnn","nwwnwnnnn","nwnnnnwnw","wwnnnnwnn","nwwnnnwnn","nwnwnwnnn","nwnwnnnwn","nwnnnwnwn","nnnwnwnwn","nwnnwnwnn","sequenceBar","shift","binary","minBarWidth","segment","searcKey","char","Object","keys","K","letter","Value","findValue","values","C","UPC_SET","unshift","bar","group","digits","result","reverse","nnnnnww","nnnnwwn","nnnwnnw","wwnnnnn","nnwnnwn","wnnnnwn","nwnnnnw","nwnnwnn","nwwnnnn","wnnwnnn","nnnwwnn","nnwwnnn","wnnnwnw","wnwnnnw","wnwnwnn","nnwwwww","nnwwnwn","nnnwnww","nwnwnnw","nnnwwwn","BARCODE_DECODERS","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","codabar","require$$6","barcodeDecoder","options","barcode","toLowerCase","list","UTILITIES","spoints","numLines","slineStep","floor","module","exports","global","javascriptBarcodeReader"],"mappings":"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"}