{"version":3,"file":"javascript-barcode-reader.min.js.map","sources":["../src/utiltities.js","../src/code-128/index.js","../src/2of5/index.js","../src/code-39/index.js","../src/code-93/index.js","../src/ean-13/index.js","../src/ean-8/index.js","../src/codabar/index.js","../src/index.js"],"sourcesContent":["const Jimp = require('jimp')\r\n\r\nfunction isNode() {\r\n  // TODO: implement this\r\n}\r\n\r\n/**\r\n * Reads image source and returns imageData as only callback parameter\r\n * @param {*} source Image source\r\n * @param {Function} callback Callback to pass the imageData\r\n */\r\nasync function getImageDataFromSource(source) {\r\n  return new Promise((resolve, reject) => {\r\n    if (source.data && source.width && source.height) {\r\n      return resolve(source)\r\n    }\r\n\r\n    // if Node.js\r\n    if (isNode()) {\r\n      if (typeof source === 'string') {\r\n        Jimp.read(source, (err, image) => {\r\n          if (err) {\r\n            reject(err)\r\n            return\r\n          }\r\n\r\n          const { data, width, height } = image.bitmap\r\n          resolve({ data: data.toJSON().data, width, height })\r\n        })\r\n      } else {\r\n        return reject(new Error('Invalid image source specified!'))\r\n      }\r\n    }\r\n    // if Browser\r\n    else if (typeof source === 'string') {\r\n      source = document.getElementById(source)\r\n      if (!source) return reject(new Error('Invalid image source specified!'))\r\n    }\r\n\r\n    let elementType = source.tagName\r\n\r\n    if (elementType === 'IMG') {\r\n      const canvas = document.createElement('canvas')\r\n      canvas.width = source.naturalWidth\r\n      canvas.height = source.naturalHeight\r\n      const ctx = canvas.getContext('2d')\r\n\r\n      ctx.drawImage(source, 0, 0)\r\n\r\n      return resolve(\r\n        ctx.getImageData(0, 0, source.naturalWidth, source.naturalHeight)\r\n      )\r\n    }\r\n\r\n    if (elementType === 'CANVAS') {\r\n      return resolve(\r\n        source\r\n          .getContext('2d')\r\n          .getImageData(0, 0, source.naturalWidth, source.naturalHeight)\r\n      )\r\n    }\r\n\r\n    return reject(new Error('Invalid image source specified!'))\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  getImageDataFromSource,\r\n}\r\n","const WIDTH_TBL = [\r\n  '212222',\r\n  '222122',\r\n  '222221',\r\n  '121223',\r\n  '121322',\r\n  '131222',\r\n  '122213',\r\n  '122312',\r\n  '132212',\r\n  '221213',\r\n  '221312',\r\n  '231212',\r\n  '112232',\r\n  '122132',\r\n  '122231',\r\n  '113222',\r\n  '123122',\r\n  '123221',\r\n  '223211',\r\n  '221132',\r\n  '221231',\r\n  '213212',\r\n  '223112',\r\n  '312131',\r\n  '311222',\r\n  '321122',\r\n  '321221',\r\n  '312212',\r\n  '322112',\r\n  '322211',\r\n  '212123',\r\n  '212321',\r\n  '232121',\r\n  '111323',\r\n  '131123',\r\n  '131321',\r\n  '112313',\r\n  '132113',\r\n  '132311',\r\n  '211313',\r\n  '231113',\r\n  '231311',\r\n  '112133',\r\n  '112331',\r\n  '132131',\r\n  '113123',\r\n  '113321',\r\n  '133121',\r\n  '313121',\r\n  '211331',\r\n  '231131',\r\n  '213113',\r\n  '213311',\r\n  '213131',\r\n  '311123',\r\n  '311321',\r\n  '331121',\r\n  '312113',\r\n  '312311',\r\n  '332111',\r\n  '314111',\r\n  '221411',\r\n  '431111',\r\n  '111224',\r\n  '111422',\r\n  '121124',\r\n  '121421',\r\n  '141122',\r\n  '141221',\r\n  '112214',\r\n  '112412',\r\n  '122114',\r\n  '122411',\r\n  '142112',\r\n  '142211',\r\n  '241211',\r\n  '221114',\r\n  '413111',\r\n  '241112',\r\n  '134111',\r\n  '111242',\r\n  '121142',\r\n  '121241',\r\n  '114212',\r\n  '124112',\r\n  '124211',\r\n  '411212',\r\n  '421112',\r\n  '421211',\r\n  '212141',\r\n  '214121',\r\n  '412121',\r\n  '111143',\r\n  '111341',\r\n  '131141',\r\n  '114113',\r\n  '114311',\r\n  '411113',\r\n  '411311',\r\n  '113141',\r\n  '114131',\r\n  '311141',\r\n  '411131',\r\n  '211412',\r\n  '211214',\r\n  '211232',\r\n  '233111',\r\n  '211133',\r\n  '2331112',\r\n]\r\n\r\nconst TBL_A = [\r\n  ' ',\r\n  '!',\r\n  '\"',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  \"'\",\r\n  '(',\r\n  ')',\r\n  '*',\r\n  '+',\r\n  ',',\r\n  '-',\r\n  '.',\r\n  '/',\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  ':',\r\n  ';',\r\n  '<',\r\n  '=',\r\n  '>',\r\n  '?',\r\n  '@',\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n  '[',\r\n  '\\\\',\r\n  ']',\r\n  '^',\r\n  '_',\r\n  'NUL',\r\n  'SOH',\r\n  'STX',\r\n  'ETX',\r\n  'EOT',\r\n  'ENQ',\r\n  'ACK',\r\n  'BEL',\r\n  'BS',\r\n  'HT',\r\n  'LF',\r\n  'VT',\r\n  'FF',\r\n  'CR',\r\n  'SO',\r\n  'SI',\r\n  'DLE',\r\n  'DC1',\r\n  'DC2',\r\n  'DC3',\r\n  'DC4',\r\n  'NAK',\r\n  'SYN',\r\n  'ETB',\r\n  'CAN',\r\n  'EM',\r\n  'SUB',\r\n  'ESC',\r\n  'FS',\r\n  'GS',\r\n  'RS',\r\n  'US',\r\n  'FNC 3',\r\n  'FNC 2',\r\n  'Shift B',\r\n  'Code C',\r\n  'Code B',\r\n  'FNC 4',\r\n  'FNC 1',\r\n]\r\n\r\nconst TBL_B = [\r\n  ' ',\r\n  '!',\r\n  '\"',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  \"'\",\r\n  '(',\r\n  ')',\r\n  '*',\r\n  '+',\r\n  ',',\r\n  '-',\r\n  '.',\r\n  '/',\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  ':',\r\n  ';',\r\n  '<',\r\n  '=',\r\n  '>',\r\n  '?',\r\n  '@',\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n  '[',\r\n  '\\\\',\r\n  ']',\r\n  '^',\r\n  '_',\r\n  '`',\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n  '{',\r\n  '|',\r\n  '}',\r\n  '~',\r\n  'DEL',\r\n  'FNC 3',\r\n  'FNC 2',\r\n  'Shift A',\r\n  'Code C',\r\n  'FNC 4',\r\n  'Code A',\r\n  'FNC 1',\r\n]\r\nconst TBL_C = [\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  '11',\r\n  '12',\r\n  '13',\r\n  '14',\r\n  '15',\r\n  '16',\r\n  '17',\r\n  '18',\r\n  '19',\r\n  '20',\r\n  '21',\r\n  '22',\r\n  '23',\r\n  '24',\r\n  '25',\r\n  '26',\r\n  '27',\r\n  '28',\r\n  '29',\r\n  '30',\r\n  '31',\r\n  '32',\r\n  '33',\r\n  '34',\r\n  '35',\r\n  '36',\r\n  '37',\r\n  '38',\r\n  '39',\r\n  '40',\r\n  '41',\r\n  '42',\r\n  '43',\r\n  '44',\r\n  '45',\r\n  '46',\r\n  '47',\r\n  '48',\r\n  '49',\r\n  '50',\r\n  '51',\r\n  '52',\r\n  '53',\r\n  '54',\r\n  '55',\r\n  '56',\r\n  '57',\r\n  '58',\r\n  '59',\r\n  '60',\r\n  '61',\r\n  '62',\r\n  '63',\r\n  '64',\r\n  '65',\r\n  '66',\r\n  '67',\r\n  '68',\r\n  '69',\r\n  '70',\r\n  '71',\r\n  '72',\r\n  '73',\r\n  '74',\r\n  '75',\r\n  '76',\r\n  '77',\r\n  '78',\r\n  '79',\r\n  '80',\r\n  '81',\r\n  '82',\r\n  '83',\r\n  '84',\r\n  '85',\r\n  '86',\r\n  '87',\r\n  '88',\r\n  '89',\r\n  '90',\r\n  '91',\r\n  '92',\r\n  '93',\r\n  '94',\r\n  '95',\r\n  '96',\r\n  '97',\r\n  '98',\r\n  '99',\r\n  'Code B',\r\n  'Code A',\r\n  'FNC 1',\r\n]\r\n\r\nmodule.exports = lines => {\r\n  let lookupTBL, sumOP, letterKey, letterCode, keyIndex\r\n  const code = []\r\n  const seq = []\r\n\r\n  // extract terminal bar\r\n  lines.pop()\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  let minBarWidth = Math.round(\r\n    lines.reduce((pre, item) => {\r\n      if (item <= barThreshold) return (pre + item) / 2\r\n      return pre\r\n    }, 0)\r\n  )\r\n\r\n  lines.forEach(line => {\r\n    seq.push(Math.round(line / minBarWidth))\r\n  })\r\n\r\n  letterKey = seq.splice(0, 6).join('')\r\n  switch (letterKey) {\r\n    case '211214':\r\n      lookupTBL = TBL_B\r\n      sumOP = 104\r\n      break\r\n    case '211232':\r\n      lookupTBL = TBL_C\r\n      sumOP = 105\r\n      break\r\n    default:\r\n      lookupTBL = TBL_A\r\n      sumOP = 103\r\n      break\r\n  }\r\n  for (let i = 1; seq.length > 12; i += 1) {\r\n    letterKey = seq.splice(0, 6).join('')\r\n    keyIndex = WIDTH_TBL.indexOf(letterKey)\r\n    sumOP += i * keyIndex\r\n    letterCode = lookupTBL[keyIndex]\r\n    switch (letterCode) {\r\n      case 'Code A':\r\n        lookupTBL = TBL_A\r\n        break\r\n      case 'Code B':\r\n        lookupTBL = TBL_B\r\n        break\r\n      case 'Code C':\r\n        lookupTBL = TBL_C\r\n        break\r\n      default:\r\n        code.push(letterCode)\r\n        break\r\n    }\r\n  }\r\n  letterKey = seq.splice(0, 6).join('')\r\n  if (sumOP % 103 !== WIDTH_TBL.indexOf(letterKey)) return null\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = [\r\n  'nnwwn',\r\n  'wnnnw',\r\n  'nwnnw',\r\n  'wwnnn',\r\n  'nnwnw',\r\n  'wnwnn',\r\n  'nwwnn',\r\n  'nnnww',\r\n  'wnnwn',\r\n  'nwnwn',\r\n]\r\n\r\nmodule.exports = (lines, type = 'standard') => {\r\n  let code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  if (type === 'interleaved') {\r\n    // extract start/ends pair\r\n    const startChar = lines\r\n      .splice(0, 4)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    const endChar = lines\r\n      .splice(lines.length - 3, 3)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    if (startChar !== 'nnnn' || endChar !== 'wnn') return null\r\n\r\n    // Read one encoded character at a time.\r\n    while (lines.length > 0) {\r\n      const seg = lines.splice(0, 10)\r\n\r\n      const a = seg\r\n        .filter((item, index) => index % 2 === 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(a))\r\n\r\n      const b = seg\r\n        .filter((item, index) => index % 2 !== 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(b))\r\n    }\r\n  } else if (type === 'standard') {\r\n    // extract start/ends pair\r\n    const startChar = lines\r\n      .splice(0, 6)\r\n      .filter((item, index) => index % 2 === 0)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    const endChar = lines\r\n      .splice(lines.length - 5, 5)\r\n      .filter((item, index) => index % 2 === 0)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    if (startChar !== 'wwn' || endChar !== 'wnw') return null\r\n\r\n    // Read one encoded character at a time.\r\n    while (lines.length > 0) {\r\n      const a = lines\r\n        .splice(0, 10)\r\n        .filter((item, index) => index % 2 === 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(a))\r\n    }\r\n  }\r\n\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = {\r\n  nnnwwnwnn: '0',\r\n  wnnwnnnnw: '1',\r\n  nnwwnnnnw: '2',\r\n  wnwwnnnnn: '3',\r\n  nnnwwnnnw: '4',\r\n  wnnwwnnnn: '5',\r\n  nnwwwnnnn: '6',\r\n  nnnwnnwnw: '7',\r\n  wnnwnnwnn: '8',\r\n  nnwwnnwnn: '9',\r\n  wnnnnwnnw: 'A',\r\n  nnwnnwnnw: 'B',\r\n  wnwnnwnnn: 'C',\r\n  nnnnwwnnw: 'D',\r\n  wnnnwwnnn: 'E',\r\n  nnwnwwnnn: 'F',\r\n  nnnnnwwnw: 'G',\r\n  wnnnnwwnn: 'H',\r\n  nnwnnwwnn: 'I',\r\n  nnnnwwwnn: 'J',\r\n  wnnnnnnww: 'K',\r\n  nnwnnnnww: 'L',\r\n  wnwnnnnwn: 'M',\r\n  nnnnwnnww: 'N',\r\n  wnnnwnnwn: 'O',\r\n  nnwnwnnwn: 'P',\r\n  nnnnnnwww: 'Q',\r\n  wnnnnnwwn: 'R',\r\n  nnwnnnwwn: 'S',\r\n  nnnnwnwwn: 'T',\r\n  wwnnnnnnw: 'U',\r\n  nwwnnnnnw: 'V',\r\n  wwwnnnnnn: 'W',\r\n  nwnnwnnnw: 'X',\r\n  wwnnwnnnn: 'Y',\r\n  nwwnwnnnn: 'Z',\r\n  nwnnnnwnw: '-',\r\n  wwnnnnwnn: '.',\r\n  nwwnnnwnn: ' ',\r\n  nwnwnwnnn: '$',\r\n  nwnwnnnwn: '/',\r\n  nwnnnwnwn: '+',\r\n  nnnwnwnwn: '%',\r\n  nwnnwnwnn: '*',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => pre + item, 0) / lines.length\r\n  )\r\n\r\n  // Read one encoded character at a time.\r\n  while (lines.length > 0) {\r\n    const sequenceBar = lines\r\n      .splice(0, 10)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n\r\n    code.push(CHAR_SET[sequenceBar.slice(0, 9).join('')])\r\n  }\r\n\r\n  if (code.pop() !== '*' || code.shift() !== '*') return null\r\n\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = [\r\n  { '100010100': '0' },\r\n  { '101001000': '1' },\r\n  { '101000100': '2' },\r\n  { '101000010': '3' },\r\n  { '100101000': '4' },\r\n  { '100100100': '5' },\r\n  { '100100010': '6' },\r\n  { '101010000': '7' },\r\n  { '100010010': '8' },\r\n  { '100001010': '9' },\r\n  { '110101000': 'A' },\r\n  { '110100100': 'B' },\r\n  { '110100010': 'C' },\r\n  { '110010100': 'D' },\r\n  { '110010010': 'E' },\r\n  { '110001010': 'F' },\r\n  { '101101000': 'G' },\r\n  { '101100100': 'H' },\r\n  { '101100010': 'I' },\r\n  { '100110100': 'J' },\r\n  { '100011010': 'K' },\r\n  { '101011000': 'L' },\r\n  { '101001100': 'M' },\r\n  { '101000110': 'N' },\r\n  { '100101100': 'O' },\r\n  { '100010110': 'P' },\r\n  { '110110100': 'Q' },\r\n  { '110110010': 'R' },\r\n  { '110101100': 'S' },\r\n  { '110100110': 'T' },\r\n  { '110010110': 'U' },\r\n  { '110011010': 'V' },\r\n  { '101101100': 'W' },\r\n  { '101100110': 'X' },\r\n  { '100110110': 'Y' },\r\n  { '100111010': 'Z' },\r\n  { '100101110': '-' },\r\n  { '111010100': '.' },\r\n  { '111010010': ' ' },\r\n  { '111001010': '$' },\r\n  { '101101110': '/' },\r\n  { '101110110': '+' },\r\n  { '110101110': '%' },\r\n  { '100100110': '($)' },\r\n  { '111011010': '(%)' },\r\n  { '111010110': '(/)' },\r\n  { '100110010': '(+)' },\r\n  { '101011110': '*' },\r\n]\r\n\r\nmodule.exports = lines => {\r\n  let code = []\r\n  const binary = []\r\n\r\n  // remove termination bar\r\n  lines.pop()\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => pre + item, 0) / lines.length\r\n  )\r\n\r\n  const minBarWidth = Math.ceil(\r\n    lines.reduce((pre, item) => {\r\n      if (item < barThreshold) return (pre + item) / 2\r\n      return pre\r\n    }, 0)\r\n  )\r\n\r\n  // leave the padded *\r\n  for (let i = 0; i < lines.length; i += 1) {\r\n    let segment = lines[i]\r\n\r\n    while (segment > 0) {\r\n      if (i % 2 === 0) {\r\n        binary.push(1)\r\n      } else {\r\n        binary.push(0)\r\n      }\r\n      segment -= minBarWidth\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < binary.length; i += 9) {\r\n    const searcKey = binary.slice(i, i + 9).join('')\r\n    code.push(\r\n      CHAR_SET.filter(item => Object.keys(item)[0] === searcKey)[0][searcKey]\r\n    )\r\n  }\r\n\r\n  if (code.shift() !== '*' || code.pop() !== '*') return null\r\n\r\n  const K = code.pop()\r\n  let sum = 0\r\n  let letter,\r\n    Value,\r\n    findValue = item => Object.values(item)[0] === letter\r\n\r\n  for (let i = code.length - 1; i >= 0; i -= 1) {\r\n    letter = code[i]\r\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\r\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\r\n  }\r\n  if (Object.values(CHAR_SET[sum % 47])[0] !== K) return null\r\n\r\n  const C = code.pop()\r\n  sum = 0\r\n\r\n  for (let i = code.length - 1; i >= 0; i -= 1) {\r\n    letter = code[i]\r\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\r\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\r\n  }\r\n  if (Object.values(CHAR_SET[sum % 47])[0] !== C) return null\r\n\r\n  return code.join('')\r\n}\r\n","const UPC_SET = {\r\n  '3211': '0',\r\n  '2221': '1',\r\n  '2122': '2',\r\n  '1411': '3',\r\n  '1132': '4',\r\n  '1231': '5',\r\n  '1114': '6',\r\n  '1312': '7',\r\n  '1213': '8',\r\n  '3112': '9',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = ''\r\n  // manually add start dummy line\r\n  lines.unshift(0)\r\n  // start indicator/reference lines\r\n  const bar = ~~((lines[1] + lines[2] + lines[3]) / 3) //eslint-disable-line\r\n\r\n  for (let i = 1; i < lines.length; i += 1) {\r\n    let group\r\n\r\n    if (code.length < 6) {\r\n      group = lines.slice(i * 4, i * 4 + 4)\r\n    } else {\r\n      group = lines.slice(i * 4 + 5, i * 4 + 9)\r\n    }\r\n\r\n    const digits = [\r\n      Math.round(group[0] / bar),\r\n      Math.round(group[1] / bar),\r\n      Math.round(group[2] / bar),\r\n      Math.round(group[3] / bar),\r\n    ]\r\n\r\n    const result =\r\n      UPC_SET[digits.join('')] || UPC_SET[digits.reverse().join('')]\r\n\r\n    if (result) {\r\n      code += result\r\n    } else {\r\n      return result\r\n    }\r\n\r\n    if (code.length === 12) break\r\n  }\r\n\r\n  return code\r\n}\r\n","const UPC_SET = {\r\n  '3211': '0',\r\n  '2221': '1',\r\n  '2122': '2',\r\n  '1411': '3',\r\n  '1132': '4',\r\n  '1231': '5',\r\n  '1114': '6',\r\n  '1312': '7',\r\n  '1213': '8',\r\n  '3112': '9',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = ''\r\n  // manually add start dummy line\r\n  lines.unshift(0)\r\n  // start indicator/reference lines\r\n  const bar = ~~((lines[1] + lines[2] + lines[3]) / 3) //eslint-disable-line\r\n\r\n  for (let i = 1; i < lines.length; i += 1) {\r\n    let group\r\n\r\n    if (code.length < 4) {\r\n      group = lines.slice(i * 4, i * 4 + 4)\r\n    } else {\r\n      group = lines.slice(i * 4 + 5, i * 4 + 9)\r\n    }\r\n\r\n    const digits = [\r\n      Math.round(group[0] / bar),\r\n      Math.round(group[1] / bar),\r\n      Math.round(group[2] / bar),\r\n      Math.round(group[3] / bar),\r\n    ]\r\n\r\n    const result =\r\n      UPC_SET[digits.join('')] || UPC_SET[digits.reverse().join('')]\r\n\r\n    if (result) {\r\n      code += result\r\n    } else {\r\n      return result\r\n    }\r\n\r\n    if (code.length === 8) break\r\n  }\r\n\r\n  return code\r\n}\r\n","const CHAR_SET = {\r\n  nnnnnww: '0',\r\n  nnnnwwn: '1',\r\n  nnnwnnw: '2',\r\n  wwnnnnn: '3',\r\n  nnwnnwn: '4',\r\n  wnnnnwn: '5',\r\n  nwnnnnw: '6',\r\n  nwnnwnn: '7',\r\n  nwwnnnn: '8',\r\n  wnnwnnn: '9',\r\n  nnnwwnn: '-',\r\n  nnwwnnn: '$',\r\n  wnnnwnw: ':',\r\n  wnwnnnw: '/',\r\n  wnwnwnn: '.',\r\n  nnwwwww: '+',\r\n  nnwwnwn: 'A',\r\n  nnnwnww: 'B',\r\n  nwnwnnw: 'C',\r\n  nnnwwwn: 'D',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  // Read one encoded character at a time.\r\n  while (lines.length > 0) {\r\n    const seg = lines.splice(0, 8).splice(0, 7)\r\n\r\n    const a = seg.map(line => (line < barThreshold ? 'n' : 'w')).join('')\r\n\r\n    code.push(CHAR_SET[a])\r\n  }\r\n\r\n  return code.join('')\r\n}\r\n","const UTILITIES = require('./utiltities')\r\n\r\n/* eslint-disable */\r\nconst BARCODE_DECODERS = {\r\n  'code-128': require('./code-128'),\r\n  'code-2of5': require('./2of5'),\r\n  'code-39': require('./code-39'),\r\n  'code-93': require('./code-93'),\r\n  'ean-13': require('./ean-13'),\r\n  'ean-8': require('./ean-8'),\r\n  codabar: require('./codabar'),\r\n}\r\n/* eslint-enable */\r\n\r\n/**\r\n * Scans and returns barcode from the provided image\r\n *\r\n * @param {*} image Image element || Canvas || ImageData || Image Path in Node.js\r\n * @param {Object} options Options defining type of barcode to detect\r\n * @param {String} options.barcode Barcode name\r\n * @param {String=} options.type Type of Barcode\r\n * @returns {String} Extracted barcode string\r\n */\r\nasync function barcodeDecoder(image, options) {\r\n  const { data, width, height } = await UTILITIES.getImageDataFromSource(image)\r\n  // const noOfPixels = data.length / (width * height)\r\n  // TODO: use noOfPixels in loops\r\n\r\n  // check points for barcode location\r\n  const spoints = [1, 9, 2, 8, 3, 7, 4, 6, 5]\r\n  let numLines = spoints.length\r\n  const slineStep = height / (numLines + 1)\r\n\r\n  return new Promise((resolve, reject) => {\r\n    // eslint-disable-next-line\r\n    while ((numLines -= 1)) {\r\n      // create section of height 2\r\n      const start = 4 * width * Math.floor(slineStep * spoints[numLines])\r\n      const end =\r\n        4 * width * Math.floor(slineStep * spoints[numLines]) + 2 * 4 * width\r\n      const pxLine = data.slice(start, end)\r\n      const sum = []\r\n      let min = 0\r\n      let max = 0\r\n\r\n      // grey scale section and sum of columns pixels in section\r\n      for (let row = 0; row < 2; row += 1) {\r\n        for (let col = 0; col < width; col += 1) {\r\n          const i = (row * width + col) * 4\r\n          const g = (pxLine[i] * 3 + pxLine[i + 1] * 4 + pxLine[i + 2] * 2) / 9\r\n          const s = sum[col]\r\n\r\n          pxLine[i] = g\r\n          pxLine[i + 1] = g\r\n          pxLine[i + 2] = g\r\n\r\n          sum[col] = g + (s === undefined ? 0 : s)\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < width; i += 1) {\r\n        sum[i] /= 2\r\n        const s = sum[i]\r\n\r\n        if (s < min) {\r\n          min = s\r\n        }\r\n        if (s > max) {\r\n          max = s\r\n        }\r\n      }\r\n\r\n      // matches columns in two rows\r\n      const pivot = min + (max - min) / 2\r\n      const bmp = []\r\n\r\n      for (let col = 0; col < width; col += 1) {\r\n        let matches = 0\r\n        for (let row = 0; row < 2; row += 1) {\r\n          if (pxLine[(row * width + col) * 4] > pivot) {\r\n            matches += 1\r\n          }\r\n        }\r\n        bmp.push(matches > 1)\r\n      }\r\n\r\n      // matches width of barcode lines\r\n      let curr = bmp[0]\r\n      let count = 1\r\n      const lines = []\r\n\r\n      for (let col = 0; col < width; col += 1) {\r\n        if (bmp[col] === curr) {\r\n          count += 1\r\n          if (col === width - 1) {\r\n            lines.push(count)\r\n          }\r\n        } else {\r\n          lines.push(count)\r\n          count = 1\r\n          curr = bmp[col]\r\n        }\r\n      }\r\n\r\n      // eslint-disable-next-line\r\n      if (lines.length <= 1) continue\r\n\r\n      // remove empty whitespaces on side of barcode\r\n      lines.shift()\r\n      lines.pop()\r\n\r\n      // Run the decoder\r\n      const result = BARCODE_DECODERS[options.barcode](lines, options.type)\r\n\r\n      if (result) {\r\n        resolve(result)\r\n      }\r\n    }\r\n\r\n    reject(new Error('Failed to extract barcode!'))\r\n  })\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = barcodeDecoder\r\n} else {\r\n  global.javascriptBarcodeReader = barcodeDecoder\r\n}\r\n"],"names":["Jimp","let","const","startChar","endChar","a","CHAR_SET","i","UPC_SET","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","UTILITIES","s","col","row","global"],"mappings":"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W,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,GAAG,EAAE;GACpB,EAAE,WAAW,EAAE,KAAK,EAAE;GACtB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"}