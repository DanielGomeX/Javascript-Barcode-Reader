{"version":3,"file":"javascript-barcode-reader.min.js.map","sources":["../src/code-128/index.js","../src/utiltities.js","../src/2of5/index.js","../src/code-39/index.js","../src/code-93/index.js","../src/ean-13/index.js","../src/ean-8/index.js","../src/codabar/index.js","../src/index.js"],"sourcesContent":["const WIDTH_TBL = [\r\n  '212222',\r\n  '222122',\r\n  '222221',\r\n  '121223',\r\n  '121322',\r\n  '131222',\r\n  '122213',\r\n  '122312',\r\n  '132212',\r\n  '221213',\r\n  '221312',\r\n  '231212',\r\n  '112232',\r\n  '122132',\r\n  '122231',\r\n  '113222',\r\n  '123122',\r\n  '123221',\r\n  '223211',\r\n  '221132',\r\n  '221231',\r\n  '213212',\r\n  '223112',\r\n  '312131',\r\n  '311222',\r\n  '321122',\r\n  '321221',\r\n  '312212',\r\n  '322112',\r\n  '322211',\r\n  '212123',\r\n  '212321',\r\n  '232121',\r\n  '111323',\r\n  '131123',\r\n  '131321',\r\n  '112313',\r\n  '132113',\r\n  '132311',\r\n  '211313',\r\n  '231113',\r\n  '231311',\r\n  '112133',\r\n  '112331',\r\n  '132131',\r\n  '113123',\r\n  '113321',\r\n  '133121',\r\n  '313121',\r\n  '211331',\r\n  '231131',\r\n  '213113',\r\n  '213311',\r\n  '213131',\r\n  '311123',\r\n  '311321',\r\n  '331121',\r\n  '312113',\r\n  '312311',\r\n  '332111',\r\n  '314111',\r\n  '221411',\r\n  '431111',\r\n  '111224',\r\n  '111422',\r\n  '121124',\r\n  '121421',\r\n  '141122',\r\n  '141221',\r\n  '112214',\r\n  '112412',\r\n  '122114',\r\n  '122411',\r\n  '142112',\r\n  '142211',\r\n  '241211',\r\n  '221114',\r\n  '413111',\r\n  '241112',\r\n  '134111',\r\n  '111242',\r\n  '121142',\r\n  '121241',\r\n  '114212',\r\n  '124112',\r\n  '124211',\r\n  '411212',\r\n  '421112',\r\n  '421211',\r\n  '212141',\r\n  '214121',\r\n  '412121',\r\n  '111143',\r\n  '111341',\r\n  '131141',\r\n  '114113',\r\n  '114311',\r\n  '411113',\r\n  '411311',\r\n  '113141',\r\n  '114131',\r\n  '311141',\r\n  '411131',\r\n  '211412',\r\n  '211214',\r\n  '211232',\r\n  '233111',\r\n  '211133',\r\n  '2331112',\r\n]\r\n\r\nconst TBL_A = [\r\n  ' ',\r\n  '!',\r\n  '\"',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  \"'\",\r\n  '(',\r\n  ')',\r\n  '*',\r\n  '+',\r\n  ',',\r\n  '-',\r\n  '.',\r\n  '/',\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  ':',\r\n  ';',\r\n  '<',\r\n  '=',\r\n  '>',\r\n  '?',\r\n  '@',\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n  '[',\r\n  '\\\\',\r\n  ']',\r\n  '^',\r\n  '_',\r\n  'NUL',\r\n  'SOH',\r\n  'STX',\r\n  'ETX',\r\n  'EOT',\r\n  'ENQ',\r\n  'ACK',\r\n  'BEL',\r\n  'BS',\r\n  'HT',\r\n  'LF',\r\n  'VT',\r\n  'FF',\r\n  'CR',\r\n  'SO',\r\n  'SI',\r\n  'DLE',\r\n  'DC1',\r\n  'DC2',\r\n  'DC3',\r\n  'DC4',\r\n  'NAK',\r\n  'SYN',\r\n  'ETB',\r\n  'CAN',\r\n  'EM',\r\n  'SUB',\r\n  'ESC',\r\n  'FS',\r\n  'GS',\r\n  'RS',\r\n  'US',\r\n  'FNC 3',\r\n  'FNC 2',\r\n  'Shift B',\r\n  'Code C',\r\n  'Code B',\r\n  'FNC 4',\r\n  'FNC 1',\r\n]\r\n\r\nconst TBL_B = [\r\n  ' ',\r\n  '!',\r\n  '\"',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '&',\r\n  \"'\",\r\n  '(',\r\n  ')',\r\n  '*',\r\n  '+',\r\n  ',',\r\n  '-',\r\n  '.',\r\n  '/',\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  ':',\r\n  ';',\r\n  '<',\r\n  '=',\r\n  '>',\r\n  '?',\r\n  '@',\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n  '[',\r\n  '\\\\',\r\n  ']',\r\n  '^',\r\n  '_',\r\n  '`',\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n  '{',\r\n  '|',\r\n  '}',\r\n  '~',\r\n  'DEL',\r\n  'FNC 3',\r\n  'FNC 2',\r\n  'Shift A',\r\n  'Code C',\r\n  'FNC 4',\r\n  'Code A',\r\n  'FNC 1',\r\n]\r\nconst TBL_C = [\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n  '10',\r\n  '11',\r\n  '12',\r\n  '13',\r\n  '14',\r\n  '15',\r\n  '16',\r\n  '17',\r\n  '18',\r\n  '19',\r\n  '20',\r\n  '21',\r\n  '22',\r\n  '23',\r\n  '24',\r\n  '25',\r\n  '26',\r\n  '27',\r\n  '28',\r\n  '29',\r\n  '30',\r\n  '31',\r\n  '32',\r\n  '33',\r\n  '34',\r\n  '35',\r\n  '36',\r\n  '37',\r\n  '38',\r\n  '39',\r\n  '40',\r\n  '41',\r\n  '42',\r\n  '43',\r\n  '44',\r\n  '45',\r\n  '46',\r\n  '47',\r\n  '48',\r\n  '49',\r\n  '50',\r\n  '51',\r\n  '52',\r\n  '53',\r\n  '54',\r\n  '55',\r\n  '56',\r\n  '57',\r\n  '58',\r\n  '59',\r\n  '60',\r\n  '61',\r\n  '62',\r\n  '63',\r\n  '64',\r\n  '65',\r\n  '66',\r\n  '67',\r\n  '68',\r\n  '69',\r\n  '70',\r\n  '71',\r\n  '72',\r\n  '73',\r\n  '74',\r\n  '75',\r\n  '76',\r\n  '77',\r\n  '78',\r\n  '79',\r\n  '80',\r\n  '81',\r\n  '82',\r\n  '83',\r\n  '84',\r\n  '85',\r\n  '86',\r\n  '87',\r\n  '88',\r\n  '89',\r\n  '90',\r\n  '91',\r\n  '92',\r\n  '93',\r\n  '94',\r\n  '95',\r\n  '96',\r\n  '97',\r\n  '98',\r\n  '99',\r\n  'Code B',\r\n  'Code A',\r\n  'FNC 1',\r\n]\r\n\r\nmodule.exports = lines => {\r\n  let lookupTBL, sumOP, letterKey, letterCode, keyIndex\r\n  const code = []\r\n  const seq = []\r\n\r\n  // extract terminal bar\r\n  lines.pop()\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  let minBarWidth = Math.round(\r\n    lines.reduce((pre, item) => {\r\n      if (item <= barThreshold) return (pre + item) / 2\r\n      return pre\r\n    }, 0)\r\n  )\r\n\r\n  lines.forEach(line => {\r\n    seq.push(Math.round(line / minBarWidth))\r\n  })\r\n\r\n  letterKey = seq.splice(0, 6).join('')\r\n  switch (letterKey) {\r\n    case '211214':\r\n      lookupTBL = TBL_B\r\n      sumOP = 104\r\n      break\r\n    case '211232':\r\n      lookupTBL = TBL_C\r\n      sumOP = 105\r\n      break\r\n    default:\r\n      lookupTBL = TBL_A\r\n      sumOP = 103\r\n      break\r\n  }\r\n  for (let i = 1; seq.length > 12; i += 1) {\r\n    letterKey = seq.splice(0, 6).join('')\r\n    keyIndex = WIDTH_TBL.indexOf(letterKey)\r\n    sumOP += i * keyIndex\r\n    letterCode = lookupTBL[keyIndex]\r\n    switch (letterCode) {\r\n      case 'Code A':\r\n        lookupTBL = TBL_A\r\n        break\r\n      case 'Code B':\r\n        lookupTBL = TBL_B\r\n        break\r\n      case 'Code C':\r\n        lookupTBL = TBL_C\r\n        break\r\n      default:\r\n        code.push(letterCode)\r\n        break\r\n    }\r\n  }\r\n  letterKey = seq.splice(0, 6).join('')\r\n  if (sumOP % 103 !== WIDTH_TBL.indexOf(letterKey)) return null\r\n  return code.join('')\r\n}\r\n","const Jimp = require('jimp')\r\n\r\nconst isNode =\r\n  typeof process === 'object' &&\r\n  process.release &&\r\n  process.release.name === 'node'\r\n\r\n/**\r\n * Creates image data from HTML image\r\n * @param {HTMLImageElement} image HTML Image element\r\n */\r\nfunction createImageData(image) {\r\n  const canvas = document.createElement('canvas')\r\n  const ctx = canvas.getContext('2d')\r\n  const width = image.naturalWidth\r\n  const height = image.naturalHeight\r\n\r\n  canvas.width = width\r\n  canvas.height = height\r\n\r\n  ctx.drawImage(image, 0, 0)\r\n\r\n  return ctx.getImageData(0, 0, image.naturalWidth, image.naturalHeight)\r\n}\r\n\r\n/**\r\n * Reads image source and returns imageData as only callback parameter\r\n * @param {*} source Image source\r\n * @param {Function} callback Callback to pass the imageData\r\n */\r\nasync function getImageDataFromSource(source) {\r\n  return new Promise((resolve, reject) => {\r\n    let { tagName } = source\r\n\r\n    // Pixel Data\r\n    if (source.data && source.width && source.height) {\r\n      return resolve(source)\r\n    }\r\n\r\n    // HTML Image element\r\n    if (tagName === 'IMG') {\r\n      return resolve(createImageData(source))\r\n    }\r\n\r\n    // HTML Canvas element\r\n    if (tagName === 'CANVAS') {\r\n      return resolve(\r\n        source\r\n          .getContext('2d')\r\n          .getImageData(0, 0, source.naturalWidth, source.naturalHeight)\r\n      )\r\n    }\r\n\r\n    // String source\r\n    if (typeof source === 'string') {\r\n      // Read file in Node.js\r\n      if (isNode) {\r\n        return Jimp.read(source, (err, image) => {\r\n          if (err) {\r\n            reject(err)\r\n            return\r\n          }\r\n\r\n          const { data, width, height } = image.bitmap\r\n          resolve({\r\n            data: data.toJSON().data,\r\n            width,\r\n            height,\r\n          })\r\n        })\r\n      }\r\n\r\n      // Find Elment by ID\r\n      const imgElem = document.getElementById(source)\r\n      if (imgElem) {\r\n        return resolve(createImageData(imgElem))\r\n      }\r\n      // Load Image from source\r\n      const img = new Image()\r\n      img.onerror = () => reject(new Error('Invalid image source specified!'))\r\n      img.onload = () => resolve(createImageData(img))\r\n      img.src = source\r\n    }\r\n\r\n    return reject(new Error('Invalid image source specified!'))\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  getImageDataFromSource,\r\n}\r\n","const CHAR_SET = [\r\n  'nnwwn',\r\n  'wnnnw',\r\n  'nwnnw',\r\n  'wwnnn',\r\n  'nnwnw',\r\n  'wnwnn',\r\n  'nwwnn',\r\n  'nnnww',\r\n  'wnnwn',\r\n  'nwnwn',\r\n]\r\n\r\nmodule.exports = (lines, type = 'standard') => {\r\n  let code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  if (type === 'interleaved') {\r\n    // extract start/ends pair\r\n    const startChar = lines\r\n      .splice(0, 4)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    const endChar = lines\r\n      .splice(lines.length - 3, 3)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    if (startChar !== 'nnnn' || endChar !== 'wnn') return null\r\n\r\n    // Read one encoded character at a time.\r\n    while (lines.length > 0) {\r\n      const seg = lines.splice(0, 10)\r\n\r\n      const a = seg\r\n        .filter((item, index) => index % 2 === 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(a))\r\n\r\n      const b = seg\r\n        .filter((item, index) => index % 2 !== 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(b))\r\n    }\r\n  } else if (type === 'standard') {\r\n    // extract start/ends pair\r\n    const startChar = lines\r\n      .splice(0, 6)\r\n      .filter((item, index) => index % 2 === 0)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    const endChar = lines\r\n      .splice(lines.length - 5, 5)\r\n      .filter((item, index) => index % 2 === 0)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n      .join('')\r\n\r\n    if (startChar !== 'wwn' || endChar !== 'wnw') return null\r\n\r\n    // Read one encoded character at a time.\r\n    while (lines.length > 0) {\r\n      const a = lines\r\n        .splice(0, 10)\r\n        .filter((item, index) => index % 2 === 0)\r\n        .map(line => (line > barThreshold ? 'w' : 'n'))\r\n        .join('')\r\n\r\n      code.push(CHAR_SET.indexOf(a))\r\n    }\r\n  }\r\n\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = {\r\n  nnnwwnwnn: '0',\r\n  wnnwnnnnw: '1',\r\n  nnwwnnnnw: '2',\r\n  wnwwnnnnn: '3',\r\n  nnnwwnnnw: '4',\r\n  wnnwwnnnn: '5',\r\n  nnwwwnnnn: '6',\r\n  nnnwnnwnw: '7',\r\n  wnnwnnwnn: '8',\r\n  nnwwnnwnn: '9',\r\n  wnnnnwnnw: 'A',\r\n  nnwnnwnnw: 'B',\r\n  wnwnnwnnn: 'C',\r\n  nnnnwwnnw: 'D',\r\n  wnnnwwnnn: 'E',\r\n  nnwnwwnnn: 'F',\r\n  nnnnnwwnw: 'G',\r\n  wnnnnwwnn: 'H',\r\n  nnwnnwwnn: 'I',\r\n  nnnnwwwnn: 'J',\r\n  wnnnnnnww: 'K',\r\n  nnwnnnnww: 'L',\r\n  wnwnnnnwn: 'M',\r\n  nnnnwnnww: 'N',\r\n  wnnnwnnwn: 'O',\r\n  nnwnwnnwn: 'P',\r\n  nnnnnnwww: 'Q',\r\n  wnnnnnwwn: 'R',\r\n  nnwnnnwwn: 'S',\r\n  nnnnwnwwn: 'T',\r\n  wwnnnnnnw: 'U',\r\n  nwwnnnnnw: 'V',\r\n  wwwnnnnnn: 'W',\r\n  nwnnwnnnw: 'X',\r\n  wwnnwnnnn: 'Y',\r\n  nwwnwnnnn: 'Z',\r\n  nwnnnnwnw: '-',\r\n  wwnnnnwnn: '.',\r\n  nwwnnnwnn: ' ',\r\n  nwnwnwnnn: '$',\r\n  nwnwnnnwn: '/',\r\n  nwnnnwnwn: '+',\r\n  nnnwnwnwn: '%',\r\n  nwnnwnwnn: '*',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => pre + item, 0) / lines.length\r\n  )\r\n\r\n  // Read one encoded character at a time.\r\n  while (lines.length > 0) {\r\n    const sequenceBar = lines\r\n      .splice(0, 10)\r\n      .map(line => (line > barThreshold ? 'w' : 'n'))\r\n\r\n    code.push(CHAR_SET[sequenceBar.slice(0, 9).join('')])\r\n  }\r\n\r\n  if (code.pop() !== '*' || code.shift() !== '*') return null\r\n\r\n  return code.join('')\r\n}\r\n","const CHAR_SET = [\r\n  { '100010100': '0' },\r\n  { '101001000': '1' },\r\n  { '101000100': '2' },\r\n  { '101000010': '3' },\r\n  { '100101000': '4' },\r\n  { '100100100': '5' },\r\n  { '100100010': '6' },\r\n  { '101010000': '7' },\r\n  { '100010010': '8' },\r\n  { '100001010': '9' },\r\n  { '110101000': 'A' },\r\n  { '110100100': 'B' },\r\n  { '110100010': 'C' },\r\n  { '110010100': 'D' },\r\n  { '110010010': 'E' },\r\n  { '110001010': 'F' },\r\n  { '101101000': 'G' },\r\n  { '101100100': 'H' },\r\n  { '101100010': 'I' },\r\n  { '100110100': 'J' },\r\n  { '100011010': 'K' },\r\n  { '101011000': 'L' },\r\n  { '101001100': 'M' },\r\n  { '101000110': 'N' },\r\n  { '100101100': 'O' },\r\n  { '100010110': 'P' },\r\n  { '110110100': 'Q' },\r\n  { '110110010': 'R' },\r\n  { '110101100': 'S' },\r\n  { '110100110': 'T' },\r\n  { '110010110': 'U' },\r\n  { '110011010': 'V' },\r\n  { '101101100': 'W' },\r\n  { '101100110': 'X' },\r\n  { '100110110': 'Y' },\r\n  { '100111010': 'Z' },\r\n  { '100101110': '-' },\r\n  { '111010100': '.' },\r\n  { '111010010': ' ' },\r\n  { '111001010': '$' },\r\n  { '101101110': '/' },\r\n  { '101110110': '+' },\r\n  { '110101110': '%' },\r\n  { '100100110': '($)' },\r\n  { '111011010': '(%)' },\r\n  { '111010110': '(/)' },\r\n  { '100110010': '(+)' },\r\n  { '101011110': '*' },\r\n]\r\n\r\nmodule.exports = lines => {\r\n  let code = []\r\n  const binary = []\r\n\r\n  // remove termination bar\r\n  lines.pop()\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => pre + item, 0) / lines.length\r\n  )\r\n\r\n  const minBarWidth = Math.ceil(\r\n    lines.reduce((pre, item) => {\r\n      if (item < barThreshold) return (pre + item) / 2\r\n      return pre\r\n    }, 0)\r\n  )\r\n\r\n  // leave the padded *\r\n  for (let i = 0; i < lines.length; i += 1) {\r\n    let segment = lines[i]\r\n\r\n    while (segment > 0) {\r\n      if (i % 2 === 0) {\r\n        binary.push(1)\r\n      } else {\r\n        binary.push(0)\r\n      }\r\n      segment -= minBarWidth\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < binary.length; i += 9) {\r\n    const searcKey = binary.slice(i, i + 9).join('')\r\n    code.push(\r\n      CHAR_SET.filter(item => Object.keys(item)[0] === searcKey)[0][searcKey]\r\n    )\r\n  }\r\n\r\n  if (code.shift() !== '*' || code.pop() !== '*') return null\r\n\r\n  const K = code.pop()\r\n  let sum = 0\r\n  let letter,\r\n    Value,\r\n    findValue = item => Object.values(item)[0] === letter\r\n\r\n  for (let i = code.length - 1; i >= 0; i -= 1) {\r\n    letter = code[i]\r\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\r\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\r\n  }\r\n  if (Object.values(CHAR_SET[sum % 47])[0] !== K) return null\r\n\r\n  const C = code.pop()\r\n  sum = 0\r\n\r\n  for (let i = code.length - 1; i >= 0; i -= 1) {\r\n    letter = code[i]\r\n    Value = CHAR_SET.indexOf(CHAR_SET.filter(findValue)[0])\r\n    sum += Value * (1 + ((code.length - (i + 1)) % 20))\r\n  }\r\n  if (Object.values(CHAR_SET[sum % 47])[0] !== C) return null\r\n\r\n  return code.join('')\r\n}\r\n","const UPC_SET = {\r\n  '3211': '0',\r\n  '2221': '1',\r\n  '2122': '2',\r\n  '1411': '3',\r\n  '1132': '4',\r\n  '1231': '5',\r\n  '1114': '6',\r\n  '1312': '7',\r\n  '1213': '8',\r\n  '3112': '9',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = ''\r\n  // manually add start dummy line\r\n  lines.unshift(0)\r\n  // start indicator/reference lines\r\n  const bar = ~~((lines[1] + lines[2] + lines[3]) / 3) //eslint-disable-line\r\n\r\n  for (let i = 1; i < lines.length; i += 1) {\r\n    let group\r\n\r\n    if (code.length < 6) {\r\n      group = lines.slice(i * 4, i * 4 + 4)\r\n    } else {\r\n      group = lines.slice(i * 4 + 5, i * 4 + 9)\r\n    }\r\n\r\n    const digits = [\r\n      Math.round(group[0] / bar),\r\n      Math.round(group[1] / bar),\r\n      Math.round(group[2] / bar),\r\n      Math.round(group[3] / bar),\r\n    ]\r\n\r\n    const result =\r\n      UPC_SET[digits.join('')] || UPC_SET[digits.reverse().join('')]\r\n\r\n    if (result) {\r\n      code += result\r\n    } else {\r\n      return result\r\n    }\r\n\r\n    if (code.length === 12) break\r\n  }\r\n\r\n  return code\r\n}\r\n","const UPC_SET = {\r\n  '3211': '0',\r\n  '2221': '1',\r\n  '2122': '2',\r\n  '1411': '3',\r\n  '1132': '4',\r\n  '1231': '5',\r\n  '1114': '6',\r\n  '1312': '7',\r\n  '1213': '8',\r\n  '3112': '9',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = ''\r\n  // manually add start dummy line\r\n  lines.unshift(0)\r\n  // start indicator/reference lines\r\n  const bar = ~~((lines[1] + lines[2] + lines[3]) / 3) //eslint-disable-line\r\n\r\n  for (let i = 1; i < lines.length; i += 1) {\r\n    let group\r\n\r\n    if (code.length < 4) {\r\n      group = lines.slice(i * 4, i * 4 + 4)\r\n    } else {\r\n      group = lines.slice(i * 4 + 5, i * 4 + 9)\r\n    }\r\n\r\n    const digits = [\r\n      Math.round(group[0] / bar),\r\n      Math.round(group[1] / bar),\r\n      Math.round(group[2] / bar),\r\n      Math.round(group[3] / bar),\r\n    ]\r\n\r\n    const result =\r\n      UPC_SET[digits.join('')] || UPC_SET[digits.reverse().join('')]\r\n\r\n    if (result) {\r\n      code += result\r\n    } else {\r\n      return result\r\n    }\r\n\r\n    if (code.length === 8) break\r\n  }\r\n\r\n  return code\r\n}\r\n","const CHAR_SET = {\r\n  nnnnnww: '0',\r\n  nnnnwwn: '1',\r\n  nnnwnnw: '2',\r\n  wwnnnnn: '3',\r\n  nnwnnwn: '4',\r\n  wnnnnwn: '5',\r\n  nwnnnnw: '6',\r\n  nwnnwnn: '7',\r\n  nwwnnnn: '8',\r\n  wnnwnnn: '9',\r\n  nnnwwnn: '-',\r\n  nnwwnnn: '$',\r\n  wnnnwnw: ':',\r\n  wnwnnnw: '/',\r\n  wnwnwnn: '.',\r\n  nnwwwww: '+',\r\n  nnwwnwn: 'A',\r\n  nnnwnww: 'B',\r\n  nwnwnnw: 'C',\r\n  nnnwwwn: 'D',\r\n}\r\n\r\nmodule.exports = lines => {\r\n  let code = []\r\n\r\n  const barThreshold = Math.ceil(\r\n    lines.reduce((pre, item) => (pre + item) / 2, 0)\r\n  )\r\n\r\n  // Read one encoded character at a time.\r\n  while (lines.length > 0) {\r\n    const seg = lines.splice(0, 8).splice(0, 7)\r\n\r\n    const a = seg.map(line => (line < barThreshold ? 'n' : 'w')).join('')\r\n\r\n    code.push(CHAR_SET[a])\r\n  }\r\n\r\n  return code.join('')\r\n}\r\n","const UTILITIES = require('./utiltities')\r\n\r\n/* eslint-disable */\r\nconst BARCODE_DECODERS = {\r\n  'code-128': require('./code-128'),\r\n  'code-2of5': require('./2of5'),\r\n  'code-39': require('./code-39'),\r\n  'code-93': require('./code-93'),\r\n  'ean-13': require('./ean-13'),\r\n  'ean-8': require('./ean-8'),\r\n  codabar: require('./codabar'),\r\n}\r\n/* eslint-enable */\r\n\r\n/**\r\n * Scans and returns barcode from the provided image\r\n *\r\n * @param {*} image Image element || Canvas || ImageData || Image Path in Node.js\r\n * @param {Object} options Options defining type of barcode to detect\r\n * @param {String} options.barcode Barcode name\r\n * @param {String=} options.type Type of Barcode\r\n * @returns {String} Extracted barcode string\r\n */\r\nasync function barcodeDecoder(image, options) {\r\n  const { data, width, height } = await UTILITIES.getImageDataFromSource(image)\r\n  const channels = data.length / (width * height)\r\n\r\n  // check points for barcode location\r\n  const spoints = [1, 9, 2, 8, 3, 7, 4, 6, 5]\r\n  let numLines = spoints.length\r\n  const slineStep = height / (numLines + 1)\r\n\r\n  return new Promise((resolve, reject) => {\r\n    // eslint-disable-next-line\r\n    while ((numLines -= 1)) {\r\n      // create section of height 2\r\n      const start = channels * width * Math.floor(slineStep * spoints[numLines])\r\n      const end =\r\n        channels * width * Math.floor(slineStep * spoints[numLines]) +\r\n        2 * channels * width\r\n      const pxLine = data.slice(start, end)\r\n      const sum = []\r\n      let min = 0\r\n      let max = 0\r\n\r\n      // grey scale section and sum of columns pixels in section\r\n      for (let row = 0; row < 2; row += 1) {\r\n        for (let col = 0; col < width; col += 1) {\r\n          const i = (row * width + col) * channels\r\n          const g = (pxLine[i] * 3 + pxLine[i + 1] * 4 + pxLine[i + 2] * 2) / 9\r\n          const s = sum[col]\r\n\r\n          pxLine[i] = g\r\n          pxLine[i + 1] = g\r\n          pxLine[i + 2] = g\r\n\r\n          sum[col] = g + (s || 0)\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < width; i += 1) {\r\n        sum[i] /= 2\r\n        const s = sum[i]\r\n\r\n        if (s < min) {\r\n          min = s\r\n        } else {\r\n          max = s\r\n        }\r\n      }\r\n\r\n      // matches columns in two rows\r\n      const pivot = min + (max - min) / 2\r\n      const bmp = []\r\n\r\n      for (let col = 0; col < width; col += 1) {\r\n        let matches = 0\r\n        for (let row = 0; row < 2; row += 1) {\r\n          if (pxLine[(row * width + col) * channels] > pivot) {\r\n            matches += 1\r\n          }\r\n        }\r\n        bmp.push(matches > 1)\r\n      }\r\n\r\n      // matches width of barcode lines\r\n      let curr = bmp[0]\r\n      let count = 1\r\n      const lines = []\r\n\r\n      for (let col = 0; col < width; col += 1) {\r\n        if (bmp[col] === curr) {\r\n          count += 1\r\n          if (col === width - 1) {\r\n            lines.push(count)\r\n          }\r\n        } else {\r\n          lines.push(count)\r\n          count = 1\r\n          curr = bmp[col]\r\n        }\r\n      }\r\n\r\n      // remove empty whitespaces on side of barcode\r\n      lines.shift()\r\n      lines.pop()\r\n\r\n      if (lines.length) {\r\n        // Run the decoder\r\n        const result = BARCODE_DECODERS[options.barcode](lines, options.type)\r\n\r\n        if (result) {\r\n          return resolve(result)\r\n        }\r\n      }\r\n    }\r\n\r\n    return reject(new Error('Failed to extract barcode!'))\r\n  })\r\n}\r\n\r\nif (module && module.exports) {\r\n  module.exports = barcodeDecoder\r\n} else {\r\n  global.javascriptBarcodeReader = barcodeDecoder\r\n}\r\n"],"names":["Math","round","ceil","createImageData","image","canvas","document","createElement","ctx","getContext","width","naturalWidth","height","naturalHeight","drawImage","getImageData","isNode","process","release","name","source","Promise","resolve","reject","data","tagName","Jimp","read","err","bitmap","toJSON","const","imgElem","getElementById","img","Image","onerror","Error","onload","src","WIDTH_TBL","TBL_A","TBL_B","TBL_C","lines","lookupTBL","sumOP","letterKey","letterCode","keyIndex","code","seq","pop","barThreshold","reduce","pre","item","minBarWidth","forEach","line","push","splice","join","let","i","length","indexOf","CHAR_SET","type","startChar","map","endChar","seg","a","filter","index","b","nnnwwnwnn","wnnwnnnnw","nnwwnnnnw","wnwwnnnnn","nnnwwnnnw","wnnwwnnnn","nnwwwnnnn","nnnwnnwnw","wnnwnnwnn","nnwwnnwnn","wnnnnwnnw","nnwnnwnnw","wnwnnwnnn","nnnnwwnnw","wnnnwwnnn","nnwnwwnnn","nnnnnwwnw","wnnnnwwnn","nnwnnwwnn","nnnnwwwnn","wnnnnnnww","nnwnnnnww","wnwnnnnwn","nnnnwnnww","wnnnwnnwn","nnwnwnnwn","nnnnnnwww","wnnnnnwwn","nnwnnnwwn","nnnnwnwwn","wwnnnnnnw","nwwnnnnnw","wwwnnnnnn","nwnnwnnnw","wwnnwnnnn","nwwnwnnnn","nwnnnnwnw","wwnnnnwnn","nwwnnnwnn","nwnwnwnnn","nwnwnnnwn","nwnnnwnwn","nnnwnwnwn","nwnnwnwnn","sequenceBar","slice","shift","binary","segment","searcKey","Object","keys","letter","Value","K","sum","findValue","values","C","UPC_SET","unshift","group","bar","digits","result","reverse","nnnnnww","nnnnwwn","nnnwnnw","wwnnnnn","nnwnnwn","wnnnnwn","nwnnnnw","nwnnwnn","nwwnnnn","wnnwnnn","nnnwwnn","nnwwnnn","wnnnwnw","wnwnnnw","wnwnwnn","nnwwwww","nnwwnwn","nnnwnww","nwnwnnw","nnnwwwn","barcodeDecoder","options","UTILITIES","getImageDataFromSource","channels","spoints","numLines","slineStep","floor","start","end","pxLine","min","max","row","col","g","s","matches","pivot","bmp","curr","count","BARCODE_DECODERS","barcode","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","codabar","require$$6","module","exports","global","javascriptBarcodeReader"],"mappings":"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"}